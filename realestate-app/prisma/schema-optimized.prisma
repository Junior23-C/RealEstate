// Optimized schema with proper indexing for performance
// This shows the optimizations that should be applied to the main schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"  // PostgreSQL has better indexing capabilities
  url      = env("DATABASE_URL")
}

model Property {
  id            String    @id @default(cuid())
  title         String
  description   String
  price         Float
  type          PropertyType
  status        PropertyStatus
  address       String
  city          String
  state         String
  zipCode       String
  bedrooms      Int
  bathrooms     Float
  squareFeet    Int
  lotSize       Float?
  yearBuilt     Int?
  features      String?   // JSON string for features array
  images        PropertyImage[]
  inquiries     Inquiry[]
  leases        Lease[]
  maintenanceRequests MaintenanceRequest[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Indexes for common queries
  @@index([status])           // For filtering by status
  @@index([type])             // For filtering by type
  @@index([city, state])      // For location-based searches
  @@index([price])            // For price range queries
  @@index([createdAt])        // For sorting by creation date
  @@index([status, type])     // Composite index for common filters
  @@index([city, status])     // Location + status filtering
}

model PropertyImage {
  id          String    @id @default(cuid())
  url         String
  alt         String?
  isPrimary   Boolean   @default(false)
  propertyId  String
  property    Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())

  // Indexes for efficient queries
  @@index([propertyId])       // For property relation
  @@index([isPrimary])        // For finding primary images
  @@index([propertyId, isPrimary])  // Composite for primary image lookup
}

model Inquiry {
  id          String    @id @default(cuid())
  name        String
  email       String
  phone       String?
  message     String
  propertyId  String
  property    Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  status      InquiryStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Indexes for admin dashboard queries
  @@index([propertyId])       // For property-specific inquiries
  @@index([status])           // For filtering by status
  @@index([createdAt])        // For recent inquiries
  @@index([propertyId, createdAt])  // Composite for property inquiry history
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  password    String
  name        String?
  role        UserRole  @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Index for authentication
  @@index([email, password])  // For login queries
}

model Tenant {
  id                String    @id @default(cuid())
  firstName         String
  lastName          String
  email             String    @unique
  phone             String
  dateOfBirth       DateTime?
  emergencyContact  String?
  emergencyContactPhone String?
  employer          String?
  employerPhone     String?
  monthlyIncome     Float?
  previousAddress   String?
  reasonForLeaving  String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  leases             Lease[]
  payments           Payment[]
  maintenanceRequests MaintenanceRequest[]

  // Indexes for tenant management
  @@index([email])            // For email lookup
  @@index([firstName, lastName])  // For name searches
  @@index([createdAt])        // For sorting
}

model Lease {
  id              String    @id @default(cuid())
  leaseNumber     String    @unique
  propertyId      String
  tenantId        String
  startDate       DateTime
  endDate         DateTime
  monthlyRent     Float
  securityDeposit Float
  status          LeaseStatus @default(PENDING)
  terms           String?   // JSON string for lease terms
  documents       String?   // JSON string for document URLs
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  property        Property  @relation(fields: [propertyId], references: [id])
  tenant          Tenant    @relation(fields: [tenantId], references: [id])
  payments        Payment[]
  notifications   Notification[]

  // Critical indexes for rental management
  @@index([status])           // For active leases
  @@index([propertyId])       // For property-specific leases
  @@index([tenantId])         // For tenant-specific leases
  @@index([endDate])          // For expiring leases
  @@index([startDate, endDate])  // For date range queries
  @@index([status, endDate])  // For active leases expiring soon
}

model Payment {
  id                String    @id @default(cuid())
  leaseId           String
  lease             Lease     @relation(fields: [leaseId], references: [id])
  tenantId          String
  tenant            Tenant    @relation(fields: [tenantId], references: [id])
  amount            Float
  type              PaymentType
  status            PaymentStatus @default(PENDING)
  dueDate           DateTime
  paidDate          DateTime?
  paymentMethod     String?
  transactionId     String?
  notes             String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  // Critical indexes for payment tracking
  @@index([status])           // For payment status filtering
  @@index([dueDate])          // For upcoming payments
  @@index([leaseId])          // For lease-specific payments
  @@index([tenantId])         // For tenant payment history
  @@index([status, dueDate])  // For overdue payments
  @@index([paidDate])         // For recent payments
  @@index([leaseId, dueDate]) // For lease payment schedule
}

model MaintenanceRequest {
  id              String    @id @default(cuid())
  propertyId      String
  tenantId        String
  title           String
  description     String
  priority        String    @default("MEDIUM")  // LOW, MEDIUM, HIGH, URGENT
  status          String    @default("OPEN")    // OPEN, IN_PROGRESS, RESOLVED, CLOSED
  resolvedDate    DateTime?
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  property        Property  @relation(fields: [propertyId], references: [id])
  tenant          Tenant    @relation(fields: [tenantId], references: [id])

  // Indexes for maintenance management
  @@index([status])           // For open/closed requests
  @@index([priority])         // For priority-based filtering
  @@index([propertyId])       // For property-specific requests
  @@index([createdAt])        // For recent requests
  @@index([status, priority]) // For urgent open requests
}

model Notification {
  id                String    @id @default(cuid())
  type              NotificationType
  title             String
  message           String
  recipientEmail    String
  recipientPhone    String?
  status            NotificationStatus @default(PENDING)
  sentAt            DateTime?
  metadata          String?   // JSON string for additional data
  leaseId           String?
  lease             Lease?    @relation(fields: [leaseId], references: [id])
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  // Indexes for notification management
  @@index([status])           // For pending notifications
  @@index([type])             // For notification type filtering
  @@index([recipientEmail])   // For recipient-specific notifications
  @@index([createdAt])        // For recent notifications
}

model ContactSettings {
  id              String    @id @default(cuid())
  companyName     String    @default("Aliaj Real Estate")
  email           String    @default("info@premiumestate.com")
  phone           String    @default("(555) 123-4567")
  address         String    @default("123 Main Street")
  city            String    @default("City")
  state           String    @default("State")
  zipCode         String    @default("12345")
  businessHours   String?   // JSON string for business hours
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

enum PropertyType {
  HOUSE
  APARTMENT
  CONDO
  TOWNHOUSE
  LAND
  COMMERCIAL
}

enum PropertyStatus {
  FOR_RENT
  FOR_SALE
  RENTED
  SOLD
}

enum InquiryStatus {
  PENDING
  CONTACTED
  CLOSED
}

enum UserRole {
  USER
  ADMIN
}

enum LeaseStatus {
  ACTIVE
  EXPIRED
  TERMINATED
  PENDING
}

enum NotificationType {
  PAYMENT_REMINDER
  RENT_DUE
  RENT_OVERDUE
  LEASE_EXPIRY
  MAINTENANCE_UPDATE
  GENERAL
}

enum NotificationStatus {
  PENDING
  SENT
  FAILED
  CANCELLED
}

enum PaymentType {
  RENT
  SECURITY_DEPOSIT
  LATE_FEE
  MAINTENANCE
  OTHER
}

enum PaymentStatus {
  PENDING
  PAID
  LATE
  PARTIAL
  CANCELLED
}